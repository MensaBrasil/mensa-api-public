"""change whatsapp_comms name and default entry_date to groups

Revision ID: 31cf9aebbbe8
Revises: 1b2e91014b4e
Create Date: 2024-12-14 00:48:40.856972

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "31cf9aebbbe8"
down_revision: str | None = "1b2e91014b4e"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "whatsapp_comms",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("communication_date", sa.DateTime(), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("reason", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("comms")
    # ### end Alembic commands ###

    ### added manually ###
    op.alter_column(
        "membership_payments",
        "payment_date",
        schema="public",
        server_default=sa.text("CURRENT_TIMESTAMP"),
    )

    op.alter_column("addresses", "created_at", schema="public", server_default=sa.text("now()"))
    op.alter_column("addresses", "updated_at", schema="public", server_default=sa.text("now()"))

    op.alter_column("emails", "created_at", schema="public", server_default=sa.text("now()"))
    op.alter_column("emails", "updated_at", schema="public", server_default=sa.text("now()"))

    op.alter_column("phones", "created_at", schema="public", server_default=sa.text("now()"))
    op.alter_column("phones", "updated_at", schema="public", server_default=sa.text("now()"))

    op.alter_column(
        "registration_audit",
        "operation_timestamp",
        schema="public",
        server_default=sa.text("now()"),
    )

    op.alter_column(
        "membership_payments_audit",
        "operation_timestamp",
        schema="public",
        server_default=sa.text("now()"),
    )

    op.alter_column(
        "addresses_audit", "operation_timestamp", schema="public", server_default=sa.text("now()")
    )

    op.alter_column(
        "emails_audit", "operation_timestamp", schema="public", server_default=sa.text("now()")
    )

    op.alter_column(
        "phones_audit", "operation_timestamp", schema="public", server_default=sa.text("now()")
    )

    op.alter_column(
        "membership_payments",
        "created_at",
        schema="public",
        server_default=sa.text("CURRENT_TIMESTAMP"),
    )

    op.alter_column(
        "registration", "created_at", schema="public", server_default=sa.text("CURRENT_TIMESTAMP")
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comms",
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("phone_number", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.Column("communication_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("status", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("reason", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="comms_pkey"),
    )
    op.drop_table("whatsapp_comms")
    # ### end Alembic commands ###
    op.alter_column("membership_payments", "payment_date", schema="public", server_default=None)

    op.alter_column("addresses", "created_at", schema="public", server_default=None)
    op.alter_column("addresses", "updated_at", schema="public", server_default=None)

    op.alter_column("emails", "created_at", schema="public", server_default=None)
    op.alter_column("emails", "updated_at", schema="public", server_default=None)

    op.alter_column("phones", "created_at", schema="public", server_default=None)
    op.alter_column("phones", "updated_at", schema="public", server_default=None)

    op.alter_column(
        "registration_audit", "operation_timestamp", schema="public", server_default=None
    )

    op.alter_column(
        "membership_payments_audit", "operation_timestamp", schema="public", server_default=None
    )

    op.alter_column("addresses_audit", "operation_timestamp", schema="public", server_default=None)

    op.alter_column("emails_audit", "operation_timestamp", schema="public", server_default=None)

    op.alter_column("phones_audit", "operation_timestamp", schema="public", server_default=None)

    op.alter_column("membership_payments", "created_at", schema="public", server_default=None)

    op.alter_column("registration", "created_at", schema="public", server_default=None)
