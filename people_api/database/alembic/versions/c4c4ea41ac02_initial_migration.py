"""Initial Migration

Revision ID: c4c4ea41ac02
Revises:
Create Date: 2024-12-11 12:27:08.698200

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c4c4ea41ac02"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "addresses_audit",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("audit_id", sa.Integer(), nullable=False),
        sa.Column("operation", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("operation_timestamp", sa.DateTime(), nullable=True),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("old_data", sa.JSON(), nullable=True),
        sa.Column("new_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("audit_id"),
    )
    op.create_table(
        "comms",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("communication_date", sa.DateTime(), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("reason", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "emails_audit",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("audit_id", sa.Integer(), nullable=False),
        sa.Column("operation", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("operation_timestamp", sa.DateTime(), nullable=True),
        sa.Column("email_id", sa.Integer(), nullable=False),
        sa.Column("old_data", sa.JSON(), nullable=True),
        sa.Column("new_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("audit_id"),
    )
    op.create_table(
        "group_list",
        sa.Column("group_id", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("group_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.PrimaryKeyConstraint("group_id"),
    )
    op.create_table(
        "group_requests",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("group_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("no_of_attempts", sa.Integer(), nullable=True),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(length=60), nullable=True),
        sa.Column("last_attempt", sa.DateTime(), nullable=True),
        sa.Column("fulfilled", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "membership_payments_audit",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("audit_id", sa.Integer(), nullable=False),
        sa.Column("operation", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("operation_timestamp", sa.DateTime(), nullable=True),
        sa.Column("payment_id", sa.Integer(), nullable=False),
        sa.Column("old_data", sa.JSON(), nullable=True),
        sa.Column("new_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("audit_id"),
    )
    op.create_table(
        "phones_audit",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("audit_id", sa.Integer(), nullable=False),
        sa.Column("operation", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("operation_timestamp", sa.DateTime(), nullable=True),
        sa.Column("phone_id", sa.Integer(), nullable=False),
        sa.Column("old_data", sa.JSON(), nullable=True),
        sa.Column("new_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("audit_id"),
    )
    op.create_table(
        "registration",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("expelled", sa.Boolean(), nullable=False),
        sa.Column("deceased", sa.Boolean(), nullable=False),
        sa.Column("transferred", sa.Boolean(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("social_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("birth_date", sa.Date(), nullable=True),
        sa.Column("cpf", sqlmodel.sql.sqltypes.AutoString(length=11), nullable=True),
        sa.Column("profession", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("gender", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("join_date", sa.Date(), nullable=True),
        sa.Column("facebook", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("suspended_until", sa.Date(), nullable=True),
        sa.Column("pronouns", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.CheckConstraint(
            "(length((cpf)::text) = 11) OR (cpf IS NULL) OR ((cpf)::text = ''::text)",
            name="check_cpf_length",
        ),
        sa.PrimaryKeyConstraint("registration_id"),
    )
    op.create_table(
        "registration_audit",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("audit_id", sa.Integer(), nullable=False),
        sa.Column("operation", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("operation_timestamp", sa.DateTime(), nullable=True),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("old_data", sa.JSON(), nullable=True),
        sa.Column("new_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("audit_id"),
    )
    op.create_table(
        "addresses",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("state", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("city", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
        sa.Column("address", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("neighborhood", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
        sa.Column("zip", sqlmodel.sql.sqltypes.AutoString(length=40), nullable=True),
        sa.Column("country", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("latlong", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.registration_id"],
        ),
        sa.PrimaryKeyConstraint("address_id"),
    )
    op.create_table(
        "certs_antec_criminais",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("expiration_date", sa.Date(), nullable=True),
        sa.Column("verified", sa.Boolean(), nullable=True),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.registration_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "emails",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("email_id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("email_type", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
        sa.Column("email_address", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.registration_id"],
        ),
        sa.PrimaryKeyConstraint("email_id"),
    )
    op.create_index(op.f("ix_emails_email_address"), "emails", ["email_address"], unique=False)
    op.create_table(
        "legal_representatives",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("representative_id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("cpf", sqlmodel.sql.sqltypes.AutoString(length=11), nullable=True),
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(length=60), nullable=True),
        sa.Column("alternative_phone", sqlmodel.sql.sqltypes.AutoString(length=60), nullable=True),
        sa.Column("observations", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.registration_id"],
        ),
        sa.PrimaryKeyConstraint("representative_id"),
    )
    op.create_index(
        op.f("ix_legal_representatives_email"), "legal_representatives", ["email"], unique=False
    )
    op.create_table(
        "member_groups",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("group_id", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("entry_date", sa.Date(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=True),
        sa.Column("exit_date", sa.Date(), nullable=True),
        sa.Column("removal_reason", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.registration_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone_number", "group_id", "entry_date", name="unique_member_group"),
    )
    op.create_table(
        "membership_payments",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("payment_id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("payment_date", sa.Date(), nullable=True),
        sa.Column("expiration_date", sa.Date(), nullable=True),
        sa.Column("amount_paid", sa.Numeric(), nullable=True),
        sa.Column("observation", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("payment_method", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("transaction_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("payment_status", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.registration_id"],
        ),
        sa.PrimaryKeyConstraint("payment_id"),
    )
    op.create_table(
        "phones",
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("phone_id", sa.Integer(), nullable=False),
        sa.Column("registration_id", sa.Integer(), nullable=False),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(length=60), nullable=False),
        sa.ForeignKeyConstraint(
            ["registration_id"],
            ["registration.registration_id"],
        ),
        sa.PrimaryKeyConstraint("phone_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("phones")
    op.drop_table("membership_payments")
    op.drop_table("member_groups")
    op.drop_index(op.f("ix_legal_representatives_email"), table_name="legal_representatives")
    op.drop_table("legal_representatives")
    op.drop_index(op.f("ix_emails_email_address"), table_name="emails")
    op.drop_table("emails")
    op.drop_table("certs_antec_criminais")
    op.drop_table("addresses")
    op.drop_table("registration_audit")
    op.drop_table("registration")
    op.drop_table("phones_audit")
    op.drop_table("membership_payments_audit")
    op.drop_table("group_requests")
    op.drop_table("group_list")
    op.drop_table("emails_audit")
    op.drop_table("comms")
    op.drop_table("addresses_audit")
    # ### end Alembic commands ###
