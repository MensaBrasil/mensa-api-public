"""add_roles_and_groups_tables

Revision ID: 8eccef203631
Revises: 4cf0d9c18cef
Create Date: 2025-01-27 16:05:27.837087

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '8eccef203631'
down_revision: Union[str, None] = '4cf0d9c18cef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('iam_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('group_description', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iam_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permission_name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('permission_description', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iam_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('role_description', sqlmodel.sql.sqltypes.AutoString(length=512), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iam_group_permissions_map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['iam_groups.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['iam_permissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iam_role_permissions_map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['iam_permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['iam_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iam_user_groups_map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['iam_groups.id'], ),
    sa.ForeignKeyConstraint(['registration_id'], ['registration.registration_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iam_user_roles_map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['registration_id'], ['registration.registration_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['iam_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_column('registration', 'beta_tester')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('registration', sa.Column('beta_tester', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
    op.drop_table('iam_user_roles_map')
    op.drop_table('iam_user_groups_map')
    op.drop_table('iam_role_permissions_map')
    op.drop_table('iam_group_permissions_map')
    op.drop_table('iam_roles')
    op.drop_table('iam_permissions')
    op.drop_table('iam_groups')
    # ### end Alembic commands ###
