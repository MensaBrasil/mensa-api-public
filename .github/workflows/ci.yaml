name: CI

on:
  push:
    branches:
    - "**"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  code_check:
    name: Code Checking
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - uses: astral-sh/setup-uv@v1
      with:
        version: "latest"
    - name: Install dependencies
      run: uv sync -p 3.12
    - name: Run mypy type check
      run: uv run mypy .
    - name: Check for secrets
      run: |
        uv add detect-secrets
        uv run detect-secrets scan --baseline .secrets.baseline

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - uses: astral-sh/setup-uv@v1
      with:
        version: "latest"
    - name: Install dependencies
      run: uv sync -p 3.12
    - name: Creating RSA key files
      run: |
        if ! command -v openssl &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y openssl
        fi
        openssl genrsa -out private_key.pem 4096
        openssl rsa -in private_key.pem -pubout -out public_key.pem
        chmod 600 private_key.pem
        chmod 644 public_key.pem
    - name: Run tests with coverage
      env:
        api_title: Mensa API
        api_port: 5000
        api_host: 0.0.0.0
        api_log_level: INFO

        postgres_host: 127.0.0.1
        postgres_user: postgres
        postgres_password: postgres
        postgres_database: stats

        postgres_ro_user: mensa_ro
        postgres_ro_password: postgres

        site_ro_user: mensa_ro
        site_ro_password: postgres
        site_database: mensa_site

        data_route_api_key: data_route_api_key
        whatsapp_route_api_key: whatsapp_route_api_key

        google_api_key: google_api_key

        openai_api_key: openai_api_key
        chatgpt_assistant_id: chatgpt_assistant_id

        twilio_account_sid: twilio_account_sid
        twilio_auth_token: twilio_auth_token
        twilio_from_whatsapp_number: twilio_from_whatsapp_number

        redis_host: localhost
        redis_port: 6379

        discord_client_id: discord_client_id
        discord_client_secret: discord_client_secret
        discord_redirect_uri: discord_redirect_uri

        service_account_file: service_account_file
        google_api_scopes: google_api_scopes
        google_service_account: google_service_account
        google_workspace_admin_account: google_workspace_admin_account
        google_workspace_cronjob_uptime_url: google_workspace_cronjob_uptime_url

        aws_access_key_id: secret-removed
        aws_secret_access_key: secret-removed
        region_name: us-east-1
        volunteer_s3_bucket: volunteer-platform-staging
        aws_sqs_access_key: testing
        aws_sqs_secret_access_key: testing

        private_internal_token_key: private_key
        public_internal_token_key: public_key

        asaas_auth_token: very_secret_token
        asaas_api_key: secret_key

        SMTP_SERVER: smtp.example.com
        SMTP_PORT: 587
        SMTP_USERNAME: your-username
        SMTP_PASSWORD: your-password

      run: |
        uv run coverage run -m pytest -sv .
        uv run coverage report
    - name: Check coverage
      run: |
        COVERAGE=$(uv run coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
        echo "Coverage is $COVERAGE%"
        if (( $(echo "$COVERAGE < 85" | bc -l) )); then
          echo "Code coverage is below 85%"
          exit 1
        fi

  security_scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Set up Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        ignore-unfixed: true
        exit-code: 1
        severity: MEDIUM
