[project]
name = "mensa-api"
version = "0.1.0"
description = ""
authors = []
requires-python = "~=3.12"
readme = "README.md"
dependencies = [
    "babel>=2.15.0,<3",
    "fastapi>=0.112.0,<0.113",
    "firebase-admin>=6.5.0,<7",
    "freezegun>=1.5.1,<2",
    "google-api-python-client>=2.140.0,<3",
    "pillow>=10.4.0,<11",
    "psycopg2-binary>=2.9.9,<3",
    "pydantic>=2.8.2,<3",
    "pymongo>=4.8.0,<5",
    "uvicorn>=0.30.5,<0.31",
    "python-multipart>=0.0.9,<0.0.10",
    "pytest>=8.3.2,<9",
    "sqlalchemy>=2.0.32,<3",
    "asyncpg>=0.29.0,<0.30",
    "pre-commit>=3.8.0,<4",
    "pytest-asyncio>=0.23.8,<0.24",
    "coverage>=7.6.1,<8",
    "pytest-mock>=3.14.0,<4",
    "alembic>=1.13.3,<2",
    "sqlmodel>=0.0.22,<0.0.23",
    "openai>=1.58.1,<2",
    "twilio>=9.4.1,<10",
    "pycpfcnpj~=1.8",
    "pydantic-settings>=2.7.0,<3",
    "detect-secrets>=1.5.0",
]

[dependency-groups]
dev = [
    "freezegun==1.5.1",
    "httpx==0.27.0",
    "pydantic==2.8.2",
    "python-dateutil==2.8.2",
    "wait4it==0.2.1",
]

[tool.pylint]
disable = [

    # Duplicate type checking that mypy handles
    "no-member",              # Dynamic attributes that are hard to infer
    "not-callable",           # mypy handles callable checks
    "redundant-u-string-prefix",  # Redundant checks for Python 3+ strings
    "assignment-from-none",   # Function return checks
    "unsubscriptable-object", # Subscription issues on types
    "unsupported-assignment-operation",
    "unsupported-delete-operation",
    "unsupported-membership-test",
    "unsupported-binary-operation",
    "import-error",           # mypy handles import checks

    # Other common checks
    "too-few-public-methods", # Common for data containers
    "too-many-arguments",     # Relax for flexibility, unless problematic
    "too-many-instance-attributes", # Relax if using complex data models
    "no-self-use",            # Allow utility methods in classes
    "protected-access",       # Allow access to internal methods in testing

    "no-member",
    "too-few-public-methods",
    "arguments-differ",
    "assignment-from-none",
    "no-self-use",
    "protected-access",
    "invalid-name",
    "unsubscriptable-object",
    "useless-suppression",
    "line-too-long",]

[tool.mypy]
# Specify the directories or files to check. Adjust these paths to fit your project structure.
files = ["src", "tests"]

# Enable strict optional checking, which requires you to explicitly handle None values.
strict_optional = true

# Allow calling functions that do not have return type annotations
disallow_untyped_calls = false

# Disallow function definitions without return type annotations
disallow_incomplete_defs = false

# Enable type checking for variable assignments (not just function arguments)
check_untyped_defs = true

# Disallow dynamic typing (using 'Any' type) unless explicitly stated
disallow_any_generics = false

# Report an error when an import cannot be resolved
ignore_missing_imports = true

# Show the column number in the error report
show_column_numbers = true

# Show the source code of errors in the output
show_error_codes = true

# Warn about unreachable code
warn_unreachable = true

# Warn about unused 'ignore' comments
warn_unused_ignores = true

# Treat the configuration file strictly, enabling all of the above settings by default
strict = false

# Enable caching for faster re-checks of the codebase
cache_dir = ".mypy_cache"

# Enable incremental mode, speeding up re-checks by only checking what has changed
incremental = true
