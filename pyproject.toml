[project]
name = "mensa-api"
version = "0.1.0"
description = ""
authors = []
requires-python = ">=3.12,<3.13"
readme = "README.md"
dependencies = [
    "aiofiles>=24.1.0",
    "alembic>=1.15.1,<2",
    "asyncpg>=0.30.0",
    "babel>=2.17.0",
    "coverage>=7.7.0,<8",
    "detect-secrets>=1.5.0",
    "email-validator>=2.2.0",
    "fastapi>=0.115.11",
    "firebase-admin>=6.7.0,<7",
    "google-auth>=2.20.0,<3",
    "cachecontrol>=0.12.6,<0.13",
    "freezegun>=1.5.1,<2",
    "google-api-python-client>=2.164.0,<3",
    "mypy>=1.15.0",
    "nltk>=3.9.1",
    "openai>=1.66.3,<2",
    "phonenumbers>=9.0.1",
    "pillow>=11.1.0",
    "pre-commit>=4.1.0",
    "psycopg2-binary>=2.9.9,<3",
    "pycpfcnpj~=1.8",
    "pydantic[email]>=2.8.2,<3",
    "pydantic-settings>=2.8.1,<3",
    "pydantic>=2.10.6",
    "pymongo>=4.11.2,<5",
    "pytest-asyncio>=0.25.3",
    "pytest-mock>=3.14.0,<4",
    "pytest>=8.3.5,<9",
    "redis>=5.2.1",
    "semgrep>=1.112.0",
    "sqlalchemy>=2.0.39,<3",
    "sqlmodel>=0.0.24",
    "twilio>=9.5.0,<10",
    "types-aiofiles>=24.1.0.20241221",
    "uvicorn>=0.34.0",
    "python-multipart>=0.0.20",
    "opentelemetry-api>=1.25.0",
    "opentelemetry-exporter-otlp>=1.25.0",
    "opentelemetry-instrumentation-fastapi>=0.46b0",
    "opentelemetry-sdk>=1.25.0",
    "types-requests>=2.32.0.20250306",
    "flask-cors==6.0.0",
    "python-jose>=3.4.0",
    "gspread>=6.2.0",
    "moto[s3,sns,sqs]>=5.1.4",
    "flask>=3.1.0",
    "requests>=2.32.4",
]

[dependency-groups]
dev = [
    "freezegun>=1.5.1",
    "httpx>=0.28.1",
    "mypy>=1.15.0",
    "pydantic>=2.10.6",
    "pytest-asyncio>=0.25.3",
    "python-dateutil>=2.9.0.post0",
    "respx>=0.22.0",
    "types-python-dateutil>=2.9.0.20241206",
    "types-redis>=4.6.0.20241004",
    "wait4it>=0.2.1",
    "semgrep>=1.108.0",
]

[tool.pylint]
disable = [

    # Duplicate type checking that mypy handles
    "no-member",              # Dynamic attributes that are hard to infer
    "not-callable",           # mypy handles callable checks
    "redundant-u-string-prefix",  # Redundant checks for Python 3+ strings
    "assignment-from-none",   # Function return checks
    "unsubscriptable-object", # Subscription issues on types
    "unsupported-assignment-operation",
    "unsupported-delete-operation",
    "unsupported-membership-test",
    "unsupported-binary-operation",
    "import-error",           # mypy handles import checks

    # Other common checks
    "too-few-public-methods", # Common for data containers
    "too-many-arguments",     # Relax for flexibility, unless problematic
    "too-many-instance-attributes", # Relax if using complex data models
    "protected-access",       # Allow access to internal methods in testing

    "no-member",
    "too-few-public-methods",
    "arguments-differ",
    "assignment-from-none",
    "protected-access",
    "invalid-name",
    "unsubscriptable-object",
    "useless-suppression",
    "line-too-long",]

[tool.ruff]
target-version = "py312"

[tool.mypy]

# Specify the directories or files to check. Adjust these paths to fit your project structure.
files = ["src", "tests"]

# Enable strict optional checking, which requires you to explicitly handle None values.
strict_optional = true

# Allow calling functions that do not have return type annotations
disallow_untyped_calls = false

# Disallow function definitions without return type annotations
disallow_incomplete_defs = false

# Enable type checking for variable assignments (not just function arguments)
check_untyped_defs = true

# Disallow dynamic typing (using 'Any' type) unless explicitly stated
disallow_any_generics = false

# Report an error when an import cannot be resolved
ignore_missing_imports = true

# Show the column number in the error report
show_column_numbers = true

# Show the source code of errors in the output
show_error_codes = true

# Warn about unreachable code
warn_unreachable = true

# Warn about unused 'ignore' comments
warn_unused_ignores = false

# Treat the configuration file strictly, enabling all of the above settings by default
strict = false

# Enable caching for faster re-checks of the codebase
cache_dir = ".mypy_cache"

# Enable incremental mode, speeding up re-checks by only checking what has changed
incremental = true

exclude = "/alembic/"
